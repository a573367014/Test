import { SchemaTypes } from '@gaoding/beam';
import { vertexShader, fragmentShader } from '../shaders/gradient-shaders';
import { config } from '../data/config';

const { int, float, vec2, vec3, vec4, mat3, mat4, tex2D, texCube } = SchemaTypes;

export const ThreeText = {
    vs: vertexShader,
    fs: fragmentShader,
    defines: {
        USE_IBL: 1,
        HAS_NORMALS: 1,
        HAS_UV: 1,
        HAS_BASECOLORMAP: 1,
        HAS_METALROUGHNESSMAP: 1,
        HAS_NORMALMAP: 1,
        // HAS_TANGENTS: 1,
        NR_POINT_LIGHTS: config.pointLightsNum,
        USE_GRADIENT: 1,
        NR_GRADIENT_COLORS: config.gradientMaxNum,
    },
    buffers: {
        position: { type: vec4, n: 3 },
        normal: { type: vec4, n: 3 },
        texCoord: { type: vec2, n: 2 },
    },
    uniforms: {
        u_MVPMatrix: { type: mat4 },
        u_ModelMatrix: { type: mat4 },
        u_NormalMatrix: { type: mat4 },
        'u_Lights[0].pos': { type: vec3, default: [1000, 0, 0] },
        'u_Lights[0].color': { type: vec3, default: [0, 0, 0] },
        'u_Lights[1].pos': { type: vec3, default: [-1000, 1000, 1000] },
        'u_Lights[1].color': { type: vec3, default: [0, 0, 0] },
        'u_Lights[2].pos': { type: vec3, default: [0, 1000, 1000] },
        'u_Lights[2].color': { type: vec3, default: [0, 0, 0] },
        'u_Lights[3].pos': { type: vec3, default: [0, -1000, 1000] },
        'u_Lights[3].color': { type: vec3, default: [0, 0, 0] },
        'u_Lights[4].pos': { type: vec3, default: [0, 0, 1000] },
        'u_Lights[4].color': { type: vec3, default: [0, 0, 0] },

        u_Camera: { type: vec3, default: [0, 0, 700] },
        u_BaseColorFactor: { type: vec4, default: [1, 1, 1, 1] },
        u_BaseColorScale: { type: float, default: 1 },
        u_NormalScale: { type: float, default: 1 },
        u_NormalStrength: { type: float, default: 0 },
        u_EmissiveFactor: { type: vec3, default: [1, 1, 1] },
        u_OcclusionStrength: { type: float, default: 1 },
        u_MetallicRoughnessValues: { type: vec2, default: [1, 0] },
        u_ScaleDiffBaseMR: { type: vec4, default: [0, 0, 0, 0] },
        u_ScaleFGDSpec: { type: vec4, default: [0, 0, 0, 0] },
        u_ScaleIBLAmbient: { type: float, default: 1 },
        u_BoundingBox: { type: vec3, default: [100, 100, 100] },
        u_GradientVec: { type: vec3, default: [1, 0, 0] },
        'u_GradientColor[0].color': { type: vec3, default: [1, 0, 0] },
        'u_GradientColor[0].offset': { type: float, default: 0 },
        'u_GradientColor[1].color': { type: vec3, default: [0, 0, 1] },
        'u_GradientColor[1].offset': { type: float, default: 1 },
        'u_GradientColor[2].color': { type: vec3, default: [1, 0, 0] },
        'u_GradientColor[2].offset': { type: float, default: 2 },
        'u_GradientColor[3].color': { type: vec3, default: [0, 0, 1] },
        'u_GradientColor[3].offset': { type: float, default: 3 },
        u_Type: { type: int, default: 0 },
        u_FaceColor: { type: vec3, default: [1, 1, 1] },
        u_TexMat: { type: mat3, default: [1, 0, 0, 0, 1, 0, 0, 0, 1] },
        'u_HemiLight.dir': { type: vec3, default: [0, 0, 1] },
        'u_HemiLight.color': { type: vec3, default: [0, 0, 0] },
        u_EnvColor: { type: vec3, default: [0, 0, 0] },
    },
    textures: {
        u_DiffuseEnvSampler: { type: texCube },
        u_SpecularEnvSampler: { type: texCube },
        u_brdfLUT: { type: tex2D },
        u_BaseColorSampler: { type: tex2D },
        u_NormalSampler: { type: tex2D },
        u_EmissiveSampler: { type: tex2D },
        u_MetallicRoughnessSampler: { type: tex2D },
        u_OcclusionSampler: { type: tex2D },
    },
};
